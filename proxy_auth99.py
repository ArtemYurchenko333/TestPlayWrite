# –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Å–∏ ProxySaver —Å –±–æ–ª—å—à–∏–º —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ–º –ø–æ—Ä—Ç–æ–≤
# Host: pool.proxysaver.com
# Port: 10000-10999 (HTTP/SOCKS)
# Country: USA  Alabama Lincoln
# Login: Tyvot7u5bOzB
# Password: 6Edg0zmh
# Rotation: For each request

import random

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–∫—Å–∏
proxy_info = {
    "host": "pool.proxysaver.com",
    "username": "Tyvot7u5bOzB",
    "password": "6Edg0zmh",
    "port_range": "10000-10999",
    "protocol": "HTTP/SOCKS",
    "country": "Germany",
    "region": "Waldbr√∂l",
    "city": "Waldbr√∂l",
    "rotation": "For each request",
    "traffic_limit": "100 MB",
    "traffic_used": "72.6 MB"
}

# –ë–æ–ª—å—à–æ–π —Å–ø–∏—Å–æ–∫ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã—Ö –ø–æ—Ä—Ç–æ–≤ –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ 10000-10999
# –í–∫–ª—é—á–µ–Ω—ã –ø–æ—Ä—Ç—ã —Å —Ä–∞–∑–Ω—ã–º–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏ –¥–ª—è –ª—É—á—à–µ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
proxy_ports = [
    # –ù–∞—á–∞–ª—å–Ω—ã–µ –ø–æ—Ä—Ç—ã (10000-10099)
    10000, 10001, 10002, 10003, 10004, 10005, 10006, 10007, 10008, 10009,
    10010, 10011, 10012, 10013, 10014, 10015, 10016, 10017, 10018, 10019,
    10020, 10021, 10022, 10023, 10024, 10025, 10026, 10027, 10028, 10029,
    10030, 10031, 10032, 10033, 10034, 10035, 10036, 10037, 10038, 10039,
    10040, 10041, 10042, 10043, 10044, 10045, 10046, 10047, 10048, 10049,
    10050, 10055, 10060, 10065, 10070, 10075, 10080, 10085, 10090, 10095,
    
    # –°—Ä–µ–¥–Ω–∏–µ –ø–æ—Ä—Ç—ã (10100-10499)
    10100, 10105, 10110, 10115, 10120, 10125, 10130, 10135, 10140, 10145,
    10150, 10155, 10160, 10165, 10170, 10175, 10180, 10185, 10190, 10195,
    10200, 10205, 10210, 10215, 10220, 10225, 10230, 10235, 10240, 10245,
    10250, 10255, 10260, 10265, 10270, 10275, 10280, 10285, 10290, 10295,
    10300, 10305, 10310, 10315, 10320, 10325, 10330, 10335, 10340, 10345,
    10350, 10355, 10360, 10365, 10370, 10375, 10380, 10385, 10390, 10395,
    10400, 10405, 10410, 10415, 10420, 10425, 10430, 10435, 10440, 10445,
    10450, 10455, 10460, 10465, 10470, 10475, 10480, 10485, 10490, 10495,
    
    # –í—ã—Å–æ–∫–∏–µ –ø–æ—Ä—Ç—ã (10500-10799)
    10500, 10505, 10510, 10515, 10520, 10525, 10530, 10535, 10540, 10545,
    10550, 10555, 10560, 10565, 10570, 10575, 10580, 10585, 10590, 10595,
    10600, 10605, 10610, 10615, 10620, 10625, 10630, 10635, 10640, 10645,
    10650, 10655, 10660, 10665, 10670, 10675, 10680, 10685, 10690, 10695,
    10700, 10705, 10710, 10715, 10720, 10725, 10730, 10735, 10740, 10745,
    10750, 10755, 10760, 10765, 10770, 10775, 10780, 10785, 10790, 10795,
    
    # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ –ø–æ—Ä—Ç—ã (10800-10999)
    10800, 10805, 10810, 10815, 10820, 10825, 10830, 10835, 10840, 10845,
    10850, 10855, 10860, 10865, 10870, 10875, 10880, 10885, 10890, 10895,
    10900, 10905, 10910, 10915, 10920, 10925, 10930, 10935, 10940, 10945,
    10950, 10955, 10960, 10965, 10970, 10975, 10980, 10985, 10990, 10995,
    10999,
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–ª—É—á–∞–π–Ω—ã–µ –ø–æ—Ä—Ç—ã –¥–ª—è –µ—â–µ –±–æ–ª—å—à–µ–≥–æ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è
    10077, 10088, 10099, 10111, 10122, 10133, 10144, 10166, 10177, 10188,
    10199, 10211, 10222, 10233, 10244, 10266, 10277, 10288, 10299, 10311,
    10322, 10333, 10344, 10366, 10377, 10388, 10399, 10411, 10422, 10433,
    10444, 10466, 10477, 10488, 10499, 10511, 10522, 10533, 10544, 10566,
    10577, 10588, 10599, 10611, 10622, 10633, 10644, 10666, 10677, 10688,
    10699, 10711, 10722, 10733, 10744, 10766, 10777, 10788, 10799, 10811,
    10822, 10833, 10844, 10866, 10877, 10888, 10899, 10911, 10922, 10933,
    10944, 10966, 10977, 10988
]

# –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–∫—Å–∏ (HTTP)
proxies = {
    "http": f"http://{proxy_info['username']}:{proxy_info['password']}@{proxy_info['host']}:10000",
    "https": f"http://{proxy_info['username']}:{proxy_info['password']}@{proxy_info['host']}:10000"
}

def get_proxy_string(port):
    """–ü–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–æ–∫—É –ø—Ä–æ–∫—Å–∏ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞"""
    return f"http://{proxy_info['username']}:{proxy_info['password']}@{proxy_info['host']}:{port}"

def get_random_proxy():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π –ø—Ä–æ–∫—Å–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –ø–æ—Ä—Ç–æ–≤"""
    random_port = random.choice(proxy_ports)
    proxy_string = get_proxy_string(random_port)
    return {
        "http": proxy_string,
        "https": proxy_string
    }

def get_proxy_by_port(port):
    """–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–∫—Å–∏ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º –ø–æ—Ä—Ç–æ–º"""
    if port in proxy_ports:
        proxy_string = get_proxy_string(port)
        return {
            "http": proxy_string,
            "https": proxy_string
        }
    else:
        # –ï—Å–ª–∏ –ø–æ—Ä—Ç –Ω–µ –≤ —Å–ø–∏—Å–∫–µ, –Ω–æ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 10000-10999, –≤—Å–µ —Ä–∞–≤–Ω–æ –ø–æ–ø—Ä–æ–±—É–µ–º
        if 10000 <= port <= 10999:
            proxy_string = get_proxy_string(port)
            return {
                "http": proxy_string,
                "https": proxy_string
            }
        else:
            return proxies

def get_multiple_random_proxies(count=5):
    """–ü–æ–ª—É—á–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ª—É—á–∞–π–Ω—ã—Ö –ø—Ä–æ–∫—Å–∏"""
    selected_ports = random.sample(proxy_ports, min(count, len(proxy_ports)))
    proxies_list = []
    
    for port in selected_ports:
        proxy_string = get_proxy_string(port)
        proxies_list.append({
            "port": port,
            "http": proxy_string,
            "https": proxy_string
        })
    
    return proxies_list

def get_proxy_by_range(start_port, end_port):
    """–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–∫—Å–∏ –∏–∑ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –ø–æ—Ä—Ç–æ–≤"""
    range_ports = [port for port in proxy_ports if start_port <= port <= end_port]
    if range_ports:
        selected_port = random.choice(range_ports)
        proxy_string = get_proxy_string(selected_port)
        return {
            "port": selected_port,
            "http": proxy_string,
            "https": proxy_string
        }
    else:
        return get_random_proxy()

def get_ports_by_category():
    """–ü–æ–ª—É—á–∏—Ç—å –ø–æ—Ä—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º"""
    return {
        "low": [port for port in proxy_ports if 10000 <= port <= 10199],
        "medium_low": [port for port in proxy_ports if 10200 <= port <= 10399],
        "medium": [port for port in proxy_ports if 10400 <= port <= 10599],
        "medium_high": [port for port in proxy_ports if 10600 <= port <= 10799],
        "high": [port for port in proxy_ports if 10800 <= port <= 10999]
    }

def get_proxy_by_category(category="random"):
    """–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–∫—Å–∏ –∏–∑ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ—Ä—Ç–æ–≤"""
    categories = get_ports_by_category()
    
    if category == "random":
        category = random.choice(list(categories.keys()))
    
    if category in categories and categories[category]:
        selected_port = random.choice(categories[category])
        proxy_string = get_proxy_string(selected_port)
        return {
            "category": category,
            "port": selected_port,
            "http": proxy_string,
            "https": proxy_string
        }
    else:
        return get_random_proxy()

# SOCKS –ø—Ä–æ–∫—Å–∏ (–µ—Å–ª–∏ –Ω—É–∂–µ–Ω)
def get_socks_proxy(port=None):
    """–ü–æ–ª—É—á–∏—Ç—å SOCKS5 –ø—Ä–æ–∫—Å–∏"""
    if port is None:
        port = random.choice(proxy_ports)
    
    return {
        "http": f"socks5://{proxy_info['username']}:{proxy_info['password']}@{proxy_info['host']}:{port}",
        "https": f"socks5://{proxy_info['username']}:{proxy_info['password']}@{proxy_info['host']}:{port}"
    }

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Ä—Ç–æ–≤
def get_ports_statistics():
    """–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –ø–æ—Ä—Ç–∞–º"""
    categories = get_ports_by_category()
    total_ports = len(proxy_ports)
    
    stats = {
        "total_ports": total_ports,
        "port_range": f"{min(proxy_ports)}-{max(proxy_ports)}",
        "categories": {}
    }
    
    for category, ports in categories.items():
        stats["categories"][category] = {
            "count": len(ports),
            "percentage": round((len(ports) / total_ports) * 100, 1),
            "range": f"{min(ports)}-{max(ports)}" if ports else "empty"
        }
    
    return stats

if __name__ == "__main__":
    print("üöÄ –†–ê–°–®–ò–†–ï–ù–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò –ü–†–û–ö–°–ò ProxySaver")
    print("=" * 60)
    
    # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    print("üîß –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–∫—Å–∏:")
    for key, value in proxy_info.items():
        print(f"   ‚Ä¢ {key.replace('_', ' ').capitalize()}: {value}")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Ä—Ç–æ–≤
    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Ä—Ç–æ–≤:")
    stats = get_ports_statistics()
    print(f"   ‚Ä¢ –í—Å–µ–≥–æ –ø–æ—Ä—Ç–æ–≤: {stats['total_ports']}")
    print(f"   ‚Ä¢ –î–∏–∞–ø–∞–∑–æ–Ω: {stats['port_range']}")
    
    print(f"\nüìã –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:")
    for category, info in stats["categories"].items():
        print(f"   ‚Ä¢ {category.replace('_', ' ').title()}: {info['count']} –ø–æ—Ä—Ç–æ–≤ ({info['percentage']}%) - {info['range']}")
    
    # –ü—Ä–∏–º–µ—Ä—ã –ø—Ä–æ–∫—Å–∏
    print(f"\nüîó –ü—Ä–∏–º–µ—Ä—ã –ø—Ä–æ–∫—Å–∏:")
    print(f"   ‚Ä¢ –û—Å–Ω–æ–≤–Ω–æ–π: {proxies['http']}")
    
    print(f"\nüé≤ –°–ª—É—á–∞–π–Ω—ã–µ –ø—Ä–æ–∫—Å–∏:")
    for i in range(5):
        random_proxy = get_random_proxy()
        print(f"   ‚Ä¢ {random_proxy['http']}")
    
    print(f"\nüéØ –ü—Ä–æ–∫—Å–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:")
    for category in ["low", "medium", "high"]:
        cat_proxy = get_proxy_by_category(category)
        print(f"   ‚Ä¢ {category.capitalize()} (–ø–æ—Ä—Ç {cat_proxy.get('port', 'N/A')}): {cat_proxy['http']}")
    
    print(f"\nüß™ SOCKS5 –ø—Ä–æ–∫—Å–∏:")
    socks_proxy = get_socks_proxy()
    print(f"   ‚Ä¢ {socks_proxy['http']}")
    
    print(f"\n‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
    print(f"üìà –î–æ—Å—Ç—É–ø–Ω–æ {len(proxy_ports)} —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø–æ—Ä—Ç–æ–≤ –¥–ª—è —Ä–æ—Ç–∞—Ü–∏–∏")